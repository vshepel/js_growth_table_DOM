{"mappings":"ACKA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,eAEnC,EAAO,EAAM,IAAI,CACnB,EAAa,EAAK,MAAM,CACxB,EAAa,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAErC,SAAS,EAAgB,CAAK,EAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,GAAG,CAAC,EAAO,GAAa,IAC/C,GAAI,EAAQ,GAAc,GAAK,EAC7B,CAAI,CAAC,EAAE,CAAC,MAAM,QACT,GAAI,EAAQ,GAAc,GAAK,EAAQ,EAG5C,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAY,IAC9B,EAAO,UAAU,GAKvB,EAAa,EAAK,MAAM,CAExB,GACF,CAEA,SAAS,EAAgB,CAAK,EACvB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,IAAK,IADI,EAAN,EAAA,KAAA,CACM,EAAI,EAAG,EAAI,KAAK,GAAG,CAAC,EAAO,GAAa,IAC3C,EAAQ,GAAc,GAAK,EAC7B,EAAI,KAAK,CAAC,EAAE,CAAC,MAAM,GACV,EAAQ,GAAc,GAAK,EAAQ,GAC5C,EAAI,UAAU,E,C,M,E,CALf,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUL,EAAa,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAEjC,GACF,CAEA,SAAS,IACP,EAAU,QAAQ,CAAG,GAhDL,GAiDhB,EAAU,QAAQ,CAAG,GAhDL,EAiDhB,EAAU,QAAQ,CAAG,GAlDL,GAmDhB,EAAU,QAAQ,CAAG,GAlDL,CAmDlB,CAEA,EAAU,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAgB,EAAa,E,GACvE,EAAU,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAgB,EAAa,E,GACvE,EAAU,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAgB,EAAa,E,GACvE,EAAU,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAgB,EAAa,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar MAX_COUNT = 10;\nvar MIN_COUNT = 2;\nvar table = document.querySelector(\".field\");\nvar appendCol = document.querySelector(\".append-column\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeCol = document.querySelector(\".remove-column\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar rows = table.rows;\nvar rowsLength = rows.length;\nvar colsLength = rows[0].cells.length;\nfunction updateRowsCount(count) {\n    for(var i = 0; i < Math.max(count, rowsLength); i++){\n        if (count < rowsLength && i >= count) rows[i].remove();\n        else if (count > rowsLength && i >= count - 1) {\n            var newRow = table.insertRow();\n            for(var c = 0; c < colsLength; c++)newRow.insertCell();\n        }\n    }\n    rowsLength = rows.length;\n    updateDisabledState();\n}\nfunction updateColsCount(count) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            for(var i = 0; i < Math.max(count, colsLength); i++){\n                if (count < colsLength && i >= count) row.cells[i].remove();\n                else if (count > colsLength && i >= count - 1) row.insertCell();\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    colsLength = rows[0].cells.length;\n    updateDisabledState();\n}\nfunction updateDisabledState() {\n    appendCol.disabled = colsLength >= MAX_COUNT;\n    removeCol.disabled = colsLength <= MIN_COUNT;\n    appendRow.disabled = rowsLength >= MAX_COUNT;\n    removeRow.disabled = rowsLength <= MIN_COUNT;\n}\nappendRow.addEventListener(\"click\", function() {\n    return updateRowsCount(rowsLength + 1);\n});\nremoveRow.addEventListener(\"click\", function() {\n    return updateRowsCount(rowsLength - 1);\n});\nappendCol.addEventListener(\"click\", function() {\n    return updateColsCount(colsLength + 1);\n});\nremoveCol.addEventListener(\"click\", function() {\n    return updateColsCount(colsLength - 1);\n});\n\n//# sourceMappingURL=index.0313be5f.js.map\n","'use strict';\n\nconst MAX_COUNT = 10;\nconst MIN_COUNT = 2;\n\nconst table = document.querySelector('.field');\nconst appendCol = document.querySelector('.append-column');\nconst appendRow = document.querySelector('.append-row');\nconst removeCol = document.querySelector('.remove-column');\nconst removeRow = document.querySelector('.remove-row');\n\nconst rows = table.rows;\nlet rowsLength = rows.length;\nlet colsLength = rows[0].cells.length;\n\nfunction updateRowsCount(count) {\n  for (let i = 0; i < Math.max(count, rowsLength); i++) {\n    if (count < rowsLength && i >= count) {\n      rows[i].remove();\n    } else if (count > rowsLength && i >= count - 1) {\n      const newRow = table.insertRow();\n\n      for (let c = 0; c < colsLength; c++) {\n        newRow.insertCell();\n      }\n    }\n  }\n\n  rowsLength = rows.length;\n\n  updateDisabledState();\n}\n\nfunction updateColsCount(count) {\n  for (const row of rows) {\n    for (let i = 0; i < Math.max(count, colsLength); i++) {\n      if (count < colsLength && i >= count) {\n        row.cells[i].remove();\n      } else if (count > colsLength && i >= count - 1) {\n        row.insertCell();\n      }\n    }\n  }\n\n  colsLength = rows[0].cells.length;\n\n  updateDisabledState();\n}\n\nfunction updateDisabledState() {\n  appendCol.disabled = colsLength >= MAX_COUNT;\n  removeCol.disabled = colsLength <= MIN_COUNT;\n  appendRow.disabled = rowsLength >= MAX_COUNT;\n  removeRow.disabled = rowsLength <= MIN_COUNT;\n}\n\nappendRow.addEventListener('click', () => updateRowsCount(rowsLength + 1));\nremoveRow.addEventListener('click', () => updateRowsCount(rowsLength - 1));\nappendCol.addEventListener('click', () => updateColsCount(colsLength + 1));\nremoveCol.addEventListener('click', () => updateColsCount(colsLength - 1));\n"],"names":["table","document","querySelector","appendCol","appendRow","removeCol","removeRow","rows","rowsLength","length","colsLength","cells","updateRowsCount","count","i","Math","max","remove","newRow","insertRow","c","insertCell","updateDisabledState","updateColsCount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","disabled","addEventListener"],"version":3,"file":"index.0313be5f.js.map"}